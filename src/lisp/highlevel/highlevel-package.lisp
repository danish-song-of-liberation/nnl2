;; NNL2

;; Filepath: nnl2/src/lisp/highlevel/highlevel-package.lisp
;; File: highlevel-package.lisp

;; Definition of :nnl2.hli, :nnl2.hli.ts, :nnl2.hli.ad
;; packages where hli stays for high-level-interface, 
;; ts stays for tensor system, ad stays for automatic 
;; differentiation

;; In case of errors/problems/suggestions, please write to issues or nnl.dev@proton.me
;; nnl2 Repository: https://github.com/danish-song-of-liberation/nnl2

(defpackage #:nnl2.hli
  (:use #:cl)
  (:export 
   #:make-foreign-pointer
   #:fastcall
   #:make-shape-pntr
   #:free-shape-pntr
   #:with-automatic-memory-freeing
   #:reduce-list-shape
   #:flatten
   #:reduce-list-size
   #:list-to-flat-vector-and-shape
   #:->
   #:<-
   #:stypeof))
   
(defpackage :nnl2.hli.ad
  (:use #:cl)
  (:export
   #:empty
   #:zeros
   #:ones
   #:data
   #:rank
   #:shape
   #:full
   #:is-leaf
   #:requires-grad
   #:grad
   #:backpropagation
   #:bp
   #:backpropagation-through-time
   #:bptt
   #:free
   #:tlet
   #:with-tensor-dispatch
   #:print-data
   #:print-grad
   #:shapes-equal-p
   #:object-type))
   
(defpackage :nnl2.hli.ad.r
  (:use #:cl)
  (:export
   #:.+
   #:.-
   #:.*
   #:./
   #:gemm))   

(defpackage #:nnl2.hli.ts
  (:use #:cl)
  (:export 
   #:empty
   #:zeros
   #:zeros-with-pntr
   #:ones
   #:ones-with-pntr
   #:tlet
   #:full
   #:full-with-pntr
   #:print-tensor
   #:rank
   #:strides
   #:dtype
   #:int-dtype
   #:reshape
   #:reinterpret
   #:shape-pointer
   #:shape
   #:.log!
   #:.log
   #:gemm
   #:gemm!
   #:+=
   #:-=
   #:size
   #:size-in-bytes
   #:.+
   #:.-
   #:*=
   #:/!
   #:.*
   #:./
   #:^=
   #:.^
   #:.exp!
   #:.exp
   #:tref
   #:view
   #:scale!
   #:scale
   #:zeros-like
   #:ones-like
   #:full-like
   #:.max!
   #:.min!
   #:.max
   #:.min
   #:.abs!
   #:.abs
   #:.map!
   #:empty-like
   #:.map
   #:hstack
   #:vstack
   #:tlet*
   #:.relu!
   #:.relu
   #:.leaky-relu!
   #:.leaky-relu
   #:.sigmoid!
   #:.sigmoid
   #:.tanh!
   #:.tanh
   #:concat
   #:randn
   #:randn-like
   #:xavier
   #:transpose!
   #:transpose
   #:sum
   #:norm
   #:copy
   #:ncast
   #:.+/incf!
   #:.+/incf
   #:.-/decf!
   #:.-/decf
   #:.+/gnrl
   #:.+/gnrl!
   #:.-/gnrl
   #:.-/gnrl!
   #:.*/mulf!
   #:.*/mulf
   #:.//divf!
   #:.//divf
   #:.*/gnrl!
   #:.*/gnrl
   #:.//gnrl!
   #:.//gnrl
   #:.^/powf!
   #:.^/powf
   #:.^/gnrl!
   #:.^/gnrl
   #:.max/maxf!
   #:.max/gnrl!
   #:.max/maxf
   #:.max/gnrl
   #:.min/minf!
   #:.min/gnrl!
   #:.min/minf
   #:.min/gnrl
   #:.+/broadcasting!
   #:.+/broadcasting
   #:.-/broadcasting
   #:.-/broadcasting!
   #:.*/broadcasting!
   #:.*/broadcasting
   #:.//broadcasting!
   #:.//broadcasting
   #:.^/broadcasting!
   #:.^/broadcasting
   #:*nnl2-tensor-types*
   #:ts-type-to-lisp
   #:lisp-type-to-ts
   #:from-flatten
   #:make-tensor
   #:/map
   #:/map!
   #:axpy
   #:axpy!
   #:use-backend
   #:use-backend/tref
   #:use-backend/abs
   #:use-backend/inplace-fill
   #:use-backend/+=
   #:use-backend/-=
   #:use-backend/*=
   #:use-backend//!
   #:use-backend/^=
   #:use-backend/.log!
   #:use-backend/.max!
   #:use-backend/.min!
   #:use-backend/scale!
   #:use-backend/.+
   #:use-backend/.-
   #:use-backend/.*
   #:use-backend/./
   #:use-backend/.^
   #:use-backend/.log
   #:use-backend/.min
   #:use-backend/.max
   #:use-backend/scale
   #:use-backend/gemm
   #:use-backend/empty
   #:use-backend/empty-like
   #:use-backend/.abs
   #:use-backend/xavier
   #:use-backend/randn
   #:use-backend/randn-like
   #:use-backend/full
   #:use-backend/ones
   #:use-backend/full-like
   #:use-backend/zeros
   #:use-backend/zeros-like
   #:use-backend/sum
   #:use-backend/l2norm
   #:use-backend/copy
   #:use-backend/.relu
   #:use-backend/.relu!
   #:use-backend/.leaky-relu
   #:use-backend/.leaky-relu!
   #:use-backend/.sigmoid
   #:use-backend/.sigmoid!
   #:use-backend/.tanh
   #:use-backend/.tanh!
   #:use-backend/transpose
   #:use-backend/transpose!
   #:use-backend/reshape
   #:use-backend/reinterpret
   #:use-backend/slice
   #:use-backend/cut
   #:use-backend/transposition
   #:use-backend/transposition!
   #:get-backend/view
   #:get-backend/tref
   #:get-backend/empty
   #:get-backend/zeros
   #:get-backend/ones
   #:get-backend/full
   #:get-backend/empty-like
   #:get-backend/zeros-like
   #:get-backend/ones-like
   #:get-backend/full-like
   #:get-backend/gemm
   #:get-backend/gemm!
   #:get-backend/+=
   #:get-backend/-=
   #:get-backend/.+
   #:get-backend/.-
   #:get-backend/*=
   #:get-backend//!
   #:get-backend/.*
   #:get-backend/./
   #:get-backend/^=
   #:get-backend/.^
   #:get-backend/.exp!
   #:get-backend/.exp
   #:get-backend/.log!
   #:get-backend/.log
   #:get-backend/scale!
   #:get-backend/scale
   #:get-backend/.max!
   #:get-backend/.max
   #:get-backend/.min!
   #:get-backend/.min
   #:get-backend/.abs!
   #:get-backend/.abs
   #:get-backend/hstack
   #:get-backend/vstack
   #:get-backend/.relu!
   #:get-backend/.relu
   #:get-backend/.leaky-relu!
   #:get-backend/.leaky-relu
   #:get-backend/.sigmoid
   #:get-backend/.sigmoid!
   #:get-backend/.tanh
   #:get-backend/.tanh!
   #:get-backend/concat
   #:get-backend/randn
   #:get-backend/randn-like
   #:get-backend/xavier
   #:get-backend/transpose
   #:get-backend/transpose!
   #:get-backend/sum
   #:get-backend/norm
   #:get-backend/copy
   #:get-backend/axpy!
   #:get-backend/axpy
   #:get-backend/reshape
   #:get-backend/reinterpret
   #:get-backend/slice
   #:get-backend/cut
   #:get-backend/transposition
   #:get-backend/transposition!
   #:get-backends/tref
   #:get-backends/view
   #:get-backends/empty
   #:get-backends/zeros
   #:get-backends/full
   #:get-backends/ones
   #:get-backends/empty-like
   #:get-backends/zeros-like
   #:get-backends/full-like
   #:get-backends/ones-like
   #:get-backends/gemm
   #:get-backends/gemm!
   #:get-backends/+=
   #:get-backends/-=
   #:get-backends/.+
   #:get-backends/.-
   #:get-backends/*=
   #:get-backends//!
   #:get-backends/.*
   #:get-backends/./
   #:get-backends/^=
   #:get-backends/.^
   #:get-backends/.exp!
   #:get-backends/.exp
   #:get-backends/.log!
   #:get-backends/.log
   #:get-backends/scale
   #:get-backends/scale!
   #:get-backends/.max!
   #:get-backends/.min!
   #:get-backends/.max
   #:get-backends/.min
   #:get-backends/.abs
   #:get-backends/.abs!
   #:get-backends/hstack
   #:get-backends/vstack
   #:get-backends/.relu
   #:get-backends/.relu!
   #:get-backends/.leaky-relu
   #:get-backends/.leaky-relu!
   #:get-backends/.sigmoid
   #:get-backends/.sigmoid!
   #:get-backends/.tanh
   #:get-backends/.tanh!
   #:get-backends/concat
   #:get-backends/randn
   #:get-backends/randn-like
   #:get-backends/xavier
   #:get-backends/transpose!
   #:get-backends/transpose
   #:get-backends/sum
   #:get-backends/norm
   #:get-backends/copy
   #:get-backends/axpy!
   #:get-backends/axpy
   #:get-backends/reshape
   #:get-backends/reinterpret
   #:get-backends/slice
   #:get-backends/cut
   #:get-backends/transposition
   #:get-backends/transposition!
   #:with-backend/view
   #:with-backend/tref
   #:with-backend/full
   #:with-backend/ones
   #:with-backend/zeros
   #:with-backend/empty
   #:with-backend/full-like
   #:with-backend/ones-like
   #:with-backend/zeros-like
   #:with-backend/empty-like
   #:with-backend/gemm
   #:with-backend/gemm!
   #:with-backend/.+
   #:with-backend/.-
   #:with-backend/+=
   #:with-backend/-=
   #:with-backend/*=
   #:with-backend//!
   #:with-backend/.exp!
   #:with-backend/.exp
   #:with-backend/.log!
   #:with-backend/.log
   #:with-backend/scale!
   #:with-backend/scale
   #:with-backend/.max!
   #:with-backend/.min!
   #:with-backend/.max
   #:with-backend/.min
   #:with-backend/.abs!
   #:with-backend/.abs
   #:with-backend/hstack
   #:with-backend/vstack
   #:with-backend/.relu
   #:with-backend/.relu!
   #:with-backend/.leaky-relu
   #:with-backend/.leaky-relu!
   #:with-backend/.sigmoid
   #:with-backend/.sigmoid!
   #:with-backend/.tanh
   #:with-backend/.tanh!
   #:with-backend/concat
   #:with-backend/randn
   #:with-backend/randn-like
   #:with-backend/xavier
   #:with-backend/transpose!
   #:with-backend/transpose
   #:with-backend/sum
   #:with-backend/norm
   #:with-backend/copy
   #:with-backend/axpy!
   #:with-backend/axpy
   #:with-backend/reshape
   #:with-backend/reinterpret
   #:with-backend/slice
   #:with-backend/cut
   #:with-backend/transposition
   #:with-backend/transposition!
   #:tensor-p
   #:type/nnl2->lisp
   #:type/lisp->nnl2
   #:type/nnl2->cffi
   #:type/lisp->cffi
   #:free
   #:empty-with-shape-pntr
   #:slice
   #:cut
   #:nrows
   #:ncols
   #:transposition
   #:transposition!
   #:rand
   #:rand-like
   #:fill!
   #:use-backend/axpy!
   #:use-backend/axpy
   #:any-scalar-p
   #:shapes-equal-p
   #:higher-rank-tensor
   #:both-scalars-p))
   